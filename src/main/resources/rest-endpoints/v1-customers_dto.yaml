openapi: 3.0.3
info:
  title: freerider.de APIs
  description: freerider.de application APIs
  contact:
    name: Antonia Billmeier
    email: s80191@bht-berlin.de
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: customers-dto-controller
    description: Customers DTO Controller
  - name: service-controller
    description: Service Controller
paths:
  /api/v1/customers:
    get:
      tags:
        - customers-dto-controller
      summary: Return all customers from repository.
      description: Return all customers from repository.
      operationId: getCustomersUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - customers-dto-controller
      summary: Update existing customers in repository.
      description: Update existing customers in repository.
      operationId: putCustomersUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerDTO'
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDTO'
    post:
      tags:
        - customers-dto-controller
      summary: Add new customers to repository.
      description: Add new customers to repository.
      operationId: postCustomersUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerDTO'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDTO'
  /api/v1/customers/{id}:
    get:
      tags:
        - customers-dto-controller
      summary: Return customer with {id} from repository.
      description: Return customer with {id} from repository.
      operationId: getCustomerUsingGET
      parameters:
        - name: id
          in: path
          description: Customer id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - customers-dto-controller
      summary: Delete customer by its id from repository.
      description: Delete customer by its id from repository.
      operationId: deleteCustomerUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: object
  /server/stop:
    get:
      tags:
        - service-controller
      summary: stop
      operationId: stopUsingGET
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    CustomerDTO:
      title: CustomerDTO
      type: object
      properties:
        customer-contacts:
          type: string
        customer-id:
          type: string
        customer-name:
          type: string
        serialnumber:
          type: integer
          format: int64
        time-sent:
          type: integer
          format: int64
        uuid:
          type: integer
          format: int64
